{
  "openapi": "3.0.1",
  "info": {
    "title": "Robot Controller API",
    "description": "Backend service for the Moon robot simulator.",
    "contact": {
      "name": "Romil Bijarnia",
      "email": "s222528574@deakin.edu.au"
    },
    "version": "v1"
  },
  "paths": {
    "/": {
      "get": {
        "tags": [
          "4.1P"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Maps": {
      "get": {
        "tags": [
          "Maps"
        ],
        "summary": "Retrieves all available maps.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Map"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Map"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Map"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Maps"
        ],
        "summary": "Creates a new map entry.",
        "requestBody": {
          "description": "The map to insert.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Map"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Map"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Map"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Map"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Map"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Map"
                }
              }
            }
          }
        }
      }
    },
    "/api/Maps/{id}": {
      "get": {
        "tags": [
          "Maps"
        ],
        "summary": "Retrieves a single map by identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the desired map.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Map"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Map"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Map"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Maps"
        ],
        "summary": "Updates an existing map.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the map being updated.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated map values.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Map"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Map"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Map"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Maps"
        ],
        "summary": "Deletes the specified map.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the map to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/RobotCommands": {
      "get": {
        "tags": [
          "RobotCommands"
        ],
        "summary": "Retrieves all robot commands.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RobotCommand"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RobotCommand"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RobotCommand"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "RobotCommands"
        ],
        "summary": "Creates a new robot command entry.",
        "requestBody": {
          "description": "The command to insert.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RobotCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RobotCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RobotCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RobotCommand"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RobotCommand"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RobotCommand"
                }
              }
            }
          }
        }
      }
    },
    "/api/RobotCommands/{id}": {
      "get": {
        "tags": [
          "RobotCommands"
        ],
        "summary": "Retrieves a robot command by identifier.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The identifier of the command.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RobotCommand"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RobotCommand"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RobotCommand"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "RobotCommands"
        ],
        "summary": "Updates an existing robot command.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the command being updated.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "The updated command values.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RobotCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RobotCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RobotCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "RobotCommands"
        ],
        "summary": "Deletes the specified robot command.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the command to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Map": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "rows": {
            "type": "integer",
            "format": "int32"
          },
          "columns": {
            "type": "integer",
            "format": "int32"
          },
          "isSquare": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "RobotCommand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isMoveCommand": {
            "type": "boolean"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      }
    }
  }
}